{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport styl from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar UpcomingMovie = function UpcomingMovie(_ref) {\n  var MovieInfo = _ref.MovieInfo;\n  var date = new Date();\n  var newdate = date.getFullYear() + '-' + parseInt(date.getMonth() + 1) + '-' + date.getDate();\n  var _useNavigation = useNavigation(),\n    navigate = _useNavigation.navigate;\n  return _jsx(View, {\n    style: styl.container,\n    children: _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigate('AboutMovie', {\n          info: MovieInfo\n        });\n      },\n      children: [_jsx(View, {\n        children: _jsx(Image, {\n          style: styl.tinyLogo,\n          source: {\n            uri: MovieInfo.poster\n          }\n        })\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          children: MovieInfo.title\n        }), _jsxs(Text, {\n          children: [\"Coming : \", MovieInfo[\"release-dateIS\"]]\n        }), _jsx(Text, {\n          children: MovieInfo.genres[0].NameEN\n        })]\n      })]\n    })\n  });\n};\nexport default UpcomingMovie;","map":{"version":3,"names":["React","useNavigation","styl","UpcomingMovie","MovieInfo","date","Date","newdate","getFullYear","parseInt","getMonth","getDate","navigate","container","info","tinyLogo","uri","poster","title","genres","NameEN"],"sources":["C:/Users/egill/Desktop/HR/3.ar/1st.onn/MAPP - þróun smá forrita/Dr.cinema/Src/components/UpcomingMovie/index.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Image, Text, TouchableOpacity} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport styl from \"./styles\"\r\n\r\n\r\n\r\n\r\n\r\nconst UpcomingMovie = ({ MovieInfo }) => {\r\n   // console.log(MovieInfo, 'movieInfo')\r\n   // console.log(newdate)\r\n    const date = new Date() \r\n    let newdate = date.getFullYear() +'-'+ parseInt(date.getMonth() +1) +'-'+ date.getDate()\r\n    // console.log(newdate, 'dagurinn í dag nýtt format')\r\n    // console.log(MovieInfo)\r\n    // console.log(MovieInfo[\"release-dateIS\"] < newdate)\r\n    const { navigate } = useNavigation();\r\n    \r\n    // if (MovieInfo[\"release-dateIS\"] < newdate) {\r\n   // console.log(newdate, 'dagurinn í dag nýtt format')\r\n    // console.log(MovieInfo[\"release-dateIS\"], 'dagur í mynd')\r\n    //  console.log(MovieInfo[\"release-dateIS\"] > date)\r\n    // console.log(MovieInfo.title, 'myndin er')\r\n    // console.log('-----------------') \r\n\r\n\r\n        return (\r\n            <View style={styl.container}>\r\n            <TouchableOpacity onPress={() => navigate('AboutMovie', {info: MovieInfo})}>\r\n                {/* The Poster Img */}\r\n                <View>\r\n                    <Image style={styl.tinyLogo} source={{ uri: MovieInfo.poster, }} />\r\n                </View>\r\n            {/* The Movie Title and other info */}\r\n                <View>\r\n                    <Text>{MovieInfo.title}</Text>\r\n                    <Text>Coming : {MovieInfo[\"release-dateIS\"]}</Text>\r\n                    <Text>{MovieInfo.genres[0].NameEN}</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n            </View>\r\n        );\r\n        }\r\n    // } \r\n\r\nexport default UpcomingMovie;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA;AAE1B,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,IAAI;AAAgB;AAAA;AAM3B,IAAMC,aAAa,GAAG,SAAhBA,aAAa,OAAsB;EAAA,IAAhBC,SAAS,QAATA,SAAS;EAG9B,IAAMC,IAAI,GAAG,IAAIC,IAAI,EAAE;EACvB,IAAIC,OAAO,GAAGF,IAAI,CAACG,WAAW,EAAE,GAAE,GAAG,GAAEC,QAAQ,CAACJ,IAAI,CAACK,QAAQ,EAAE,GAAE,CAAC,CAAC,GAAE,GAAG,GAAEL,IAAI,CAACM,OAAO,EAAE;EAIxF,qBAAqBV,aAAa,EAAE;IAA5BW,QAAQ,kBAARA,QAAQ;EAUZ,OACI,KAAC,IAAI;IAAC,KAAK,EAAEV,IAAI,CAACW,SAAU;IAAA,UAC5B,MAAC,gBAAgB;MAAC,OAAO,EAAE;QAAA,OAAMD,QAAQ,CAAC,YAAY,EAAE;UAACE,IAAI,EAAEV;QAAS,CAAC,CAAC;MAAA,CAAC;MAAA,WAEvE,KAAC,IAAI;QAAA,UACD,KAAC,KAAK;UAAC,KAAK,EAAEF,IAAI,CAACa,QAAS;UAAC,MAAM,EAAE;YAAEC,GAAG,EAAEZ,SAAS,CAACa;UAAQ;QAAE;MAAG,EAChE,EAEP,MAAC,IAAI;QAAA,WACD,KAAC,IAAI;UAAA,UAAEb,SAAS,CAACc;QAAK,EAAQ,EAC9B,MAAC,IAAI;UAAA,wBAAWd,SAAS,CAAC,gBAAgB,CAAC;QAAA,EAAQ,EACnD,KAAC,IAAI;UAAA,UAAEA,SAAS,CAACe,MAAM,CAAC,CAAC,CAAC,CAACC;QAAM,EAAQ;MAAA,EACtC;IAAA;EACQ,EACZ;AAEX,CAAC;AAGT,eAAejB,aAAa"},"metadata":{},"sourceType":"module"}