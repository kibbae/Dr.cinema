{"ast":null,"code":"import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Ionicons, AntDesign } from '@expo/vector-icons';\nimport LoadPage from \"../views/LoadPage\";\nimport Home from \"../views/Home\";\nimport AboutMovie from \"../views/AboutMovie\";\nimport Upcoming from \"../views/Upcoming\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tap = createBottomTabNavigator();\nvar AuthStack = createStackNavigator();\nvar HomeStack = createStackNavigator();\nfunction HomeStackScreen() {\n  return _jsxs(HomeStack.Navigator, {\n    children: [_jsx(HomeStack.Screen, {\n      name: \"Home\",\n      component: Home,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(HomeStack.Screen, {\n      name: \"AboutMovie\",\n      component: AboutMovie,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n}\nvar Taps = function Taps() {\n  return _jsxs(Tap.Navigator, {\n    initialRouteName: \"LoadPage\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            size = _ref2.size,\n            color = _ref2.color;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'ios-home' : 'ios-home-outline';\n          } else if (route.name === 'Upcoming') {\n            iconName = focused ? 'exclamationcircle' : 'exclamationcircleo';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: 24,\n            color: \"white\"\n          });\n        },\n        headerShown: false,\n        tabBarStyle: {\n          height: 64,\n          paddingHorizontal: 0,\n          paddingTop: 12,\n          backgroundColor: 'rgba(34,36,40,1)',\n          position: 'absolute',\n          borderTopWidth: 0\n        },\n        tabBarShowLabel: false\n      };\n    },\n    children: [_jsx(Tap.Screen, {\n      name: \"LoadPage\",\n      component: LoadPage,\n      options: {\n        tabBarButton: function tabBarButton() {\n          return null;\n        },\n        tabBarVisible: false\n      }\n    }), _jsx(Tap.Screen, {\n      name: \"Home\",\n      component: HomeStackScreen\n    }), _jsx(Tap.Screen, {\n      name: \"Upcoming\",\n      component: Upcoming\n    })]\n  });\n};\nexport default Taps;","map":{"version":3,"names":["createBottomTabNavigator","createStackNavigator","Ionicons","AntDesign","LoadPage","Home","AboutMovie","Upcoming","Tap","AuthStack","HomeStack","HomeStackScreen","headerShown","Taps","route","tabBarIcon","focused","size","color","iconName","name","tabBarStyle","height","paddingHorizontal","paddingTop","backgroundColor","position","borderTopWidth","tabBarShowLabel","tabBarButton","tabBarVisible"],"sources":["C:/Users/egill/Desktop/HR/3.ar/1st.onn/MAPP - þróun smá forrita/Dr.cinema/Src/routes/index.js"],"sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { Ionicons, AntDesign } from '@expo/vector-icons';\r\n\r\nimport LoadPage from \"../views/LoadPage\"\r\nimport Home from \"../views/Home\"\r\nimport AboutMovie from \"../views/AboutMovie\"\r\nimport Upcoming from \"../views/Upcoming\"\r\n\r\n\r\nconst Tap = createBottomTabNavigator();\r\nconst AuthStack = createStackNavigator();\r\nconst HomeStack = createStackNavigator();\r\n\r\nfunction HomeStackScreen() {\r\n    return (\r\n      <HomeStack.Navigator>\r\n       <HomeStack.Screen name=\"Home\" component={Home} options={{headerShown: false,}}/> \r\n       <HomeStack.Screen name=\"AboutMovie\" component={AboutMovie} options={{headerShown: false,}}/>            \r\n      </HomeStack.Navigator>\r\n     );\r\n   }\r\n\r\n\r\nconst Taps = () => {\r\n    return(\r\n        <Tap.Navigator \r\n            initialRouteName=\"LoadPage\"\r\n            screenOptions={({route}) => ({\r\n                tabBarIcon: ({focused, size, color}) => {\r\n                    let iconName\r\n                    if (route.name === 'Home') {\r\n                        iconName = focused ? 'ios-home' : 'ios-home-outline';\r\n                    } else if (route.name === 'Upcoming') {\r\n                        iconName = focused ? 'exclamationcircle' : 'exclamationcircleo';\r\n                    }\r\n                    return <Ionicons name={iconName} size={24} color=\"white\" />\r\n                },\r\n            headerShown: false,\r\n            tabBarStyle: {\r\n                height: 64,\r\n                paddingHorizontal: 0,\r\n                paddingTop: 12,\r\n                backgroundColor: 'rgba(34,36,40,1)',\r\n                position: 'absolute',\r\n                borderTopWidth: 0,\r\n            },\r\n            tabBarShowLabel: false\r\n          })\r\n        }>\r\n            <Tap.Screen name=\"LoadPage\" component={LoadPage} \r\n                options={{\r\n                    tabBarButton: () => null,\r\n                    tabBarVisible:false //hide tab bar on this screen\r\n                }}\r\n            />\r\n            <Tap.Screen name=\"Home\" component={HomeStackScreen} />\r\n            <Tap.Screen name=\"Upcoming\" component={Upcoming}  /> \r\n        </Tap.Navigator>\r\n    );\r\n};\r\n\r\n\r\nexport default Taps;"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AAExD,OAAOC,QAAQ;AACf,OAAOC,IAAI;AACX,OAAOC,UAAU;AACjB,OAAOC,QAAQ;AAAyB;AAAA;AAGxC,IAAMC,GAAG,GAAGR,wBAAwB,EAAE;AACtC,IAAMS,SAAS,GAAGR,oBAAoB,EAAE;AACxC,IAAMS,SAAS,GAAGT,oBAAoB,EAAE;AAExC,SAASU,eAAe,GAAG;EACvB,OACE,MAAC,SAAS,CAAC,SAAS;IAAA,WACnB,KAAC,SAAS,CAAC,MAAM;MAAC,IAAI,EAAC,MAAM;MAAC,SAAS,EAAEN,IAAK;MAAC,OAAO,EAAE;QAACO,WAAW,EAAE;MAAM;IAAE,EAAE,EAChF,KAAC,SAAS,CAAC,MAAM;MAAC,IAAI,EAAC,YAAY;MAAC,SAAS,EAAEN,UAAW;MAAC,OAAO,EAAE;QAACM,WAAW,EAAE;MAAM;IAAE,EAAE;EAAA,EACvE;AAEzB;AAGH,IAAMC,IAAI,GAAG,SAAPA,IAAI,GAAS;EACf,OACI,MAAC,GAAG,CAAC,SAAS;IACV,gBAAgB,EAAC,UAAU;IAC3B,aAAa,EAAE;MAAA,IAAEC,KAAK,QAALA,KAAK;MAAA,OAAO;QACzBC,UAAU,EAAE,2BAA4B;UAAA,IAA1BC,OAAO,SAAPA,OAAO;YAAEC,IAAI,SAAJA,IAAI;YAAEC,KAAK,SAALA,KAAK;UAC9B,IAAIC,QAAQ;UACZ,IAAIL,KAAK,CAACM,IAAI,KAAK,MAAM,EAAE;YACvBD,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,kBAAkB;UACxD,CAAC,MAAM,IAAIF,KAAK,CAACM,IAAI,KAAK,UAAU,EAAE;YAClCD,QAAQ,GAAGH,OAAO,GAAG,mBAAmB,GAAG,oBAAoB;UACnE;UACA,OAAO,KAAC,QAAQ;YAAC,IAAI,EAAEG,QAAS;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAO,EAAG;QAC/D,CAAC;QACLP,WAAW,EAAE,KAAK;QAClBS,WAAW,EAAE;UACTC,MAAM,EAAE,EAAE;UACVC,iBAAiB,EAAE,CAAC;UACpBC,UAAU,EAAE,EAAE;UACdC,eAAe,EAAE,kBAAkB;UACnCC,QAAQ,EAAE,UAAU;UACpBC,cAAc,EAAE;QACpB,CAAC;QACDC,eAAe,EAAE;MACnB,CAAC;IAAA,CACF;IAAA,WACG,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,UAAU;MAAC,SAAS,EAAExB,QAAS;MAC5C,OAAO,EAAE;QACLyB,YAAY,EAAE;UAAA,OAAM,IAAI;QAAA;QACxBC,aAAa,EAAC;MAClB;IAAE,EACJ,EACF,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,MAAM;MAAC,SAAS,EAAEnB;IAAgB,EAAG,EACtD,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,UAAU;MAAC,SAAS,EAAEJ;IAAS,EAAI;EAAA,EACxC;AAExB,CAAC;AAGD,eAAeM,IAAI"},"metadata":{},"sourceType":"module"}