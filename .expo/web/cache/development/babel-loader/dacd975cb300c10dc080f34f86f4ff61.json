{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Rating } from 'react-native-ratings';\nimport { Entypo } from '@expo/vector-icons';\nimport styl from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AboutMovie = function AboutMovie(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _route$params$info = route.params.info,\n    title = _route$params$info.title,\n    year = _route$params$info.year,\n    poster = _route$params$info.poster,\n    genres = _route$params$info.genres,\n    durationMinutes = _route$params$info.durationMinutes,\n    omdb = _route$params$info.omdb;\n  if (genres.length > 1) {\n    var theGenra = genres[0].NameEN + \"/\" + genres[1].NameEN;\n  } else {\n    var theGenra = genres[0].NameEN;\n  }\n  return _jsx(View, {\n    style: styl.container,\n    children: _jsx(ImageBackground, {\n      style: styl.backgroundImage,\n      source: {\n        uri: poster\n      },\n      resizeMode: \"cover\",\n      blurRadius: 1,\n      children: _jsx(LinearGradient, {\n        colors: ['rgba(21,21,21,0.55)', 'rgba(21,21,21,1)'],\n        start: {\n          x: 0.5,\n          y: 0\n        },\n        end: {\n          x: 0.5,\n          y: 0.5\n        },\n        style: styl.background,\n        children: _jsxs(SafeAreaView, {\n          style: styl.mainContainer,\n          children: [_jsx(Image, {\n            style: styl.poster,\n            source: {\n              uri: poster\n            }\n          }), _jsx(Text, {\n            style: styl.title,\n            children: title\n          }), _jsxs(View, {\n            style: styl.infoInRow,\n            children: [_jsx(Text, {\n              style: styl.MovieInfo,\n              children: year\n            }), _jsx(Entypo, {\n              name: \"dot-single\",\n              size: 18,\n              color: \"white\"\n            }), _jsx(Text, {\n              style: styl.MovieInfo,\n              children: theGenra\n            }), _jsx(Entypo, {\n              name: \"dot-single\",\n              size: 18,\n              color: \"white\"\n            }), _jsx(Text, {\n              style: styl.MovieInfo,\n              children: durationMinutes\n            })]\n          }), _jsxs(View, {\n            style: styl.infoInRow,\n            children: [_jsx(Rating, {\n              type: \"custom\",\n              imageSize: 20,\n              ratingColor: '#F6C700',\n              tintColor: 'rgba(21,21,21,1)',\n              startingValue: omdb[0].imdbRating / 2,\n              readonly: true,\n              isDisabled: true\n            }), _jsx(Image, {\n              style: styl.IMDB,\n              source: {\n                uri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/IMDB_Logo_2016.svg/2560px-IMDB_Logo_2016.svg.png'\n              }\n            })]\n          }), _jsx(Text, {\n            style: [styl.MovieInfo, styl.plot],\n            children: omdb[0].Plot\n          }), _jsx(View, {\n            style: styl.coverButton,\n            children: _jsx(TouchableOpacity, {\n              style: styl.GetTicketButton,\n              children: _jsx(Text, {\n                children: \"Get Ticket\"\n              })\n            })\n          })]\n        })\n      })\n    })\n  });\n};\nexport default AboutMovie;","map":{"version":3,"names":["React","LinearGradient","Rating","Entypo","styl","AboutMovie","route","navigation","params","info","title","year","poster","genres","durationMinutes","omdb","length","theGenra","NameEN","container","backgroundImage","uri","x","y","background","mainContainer","infoInRow","MovieInfo","imdbRating","IMDB","plot","Plot","coverButton","GetTicketButton"],"sources":["C:/Users/Einar TÃ³mas G/Documents/app development/Dr.cinema/Src/views/AboutMovie/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text, Image, StyleSheet, ImageBackground, StatusBar, SafeAreaView, TouchableOpacity } from \"react-native\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { Rating } from 'react-native-ratings';\r\nimport { Entypo } from '@expo/vector-icons';\r\n\r\nimport styl from \"./style\"\r\n\r\n\r\nconst AboutMovie = ({ route, navigation }) => {\r\n    const { title, year, poster, genres, durationMinutes, omdb } = route.params.info\r\n\r\n    if (genres.length > 1) {\r\n        var theGenra = genres[0].NameEN + \"/\" + genres[1].NameEN\r\n    } else {\r\n        var theGenra = genres[0].NameEN\r\n    }\r\n\r\n  return (\r\n    <View style={styl.container}>\r\n        <ImageBackground style={styl.backgroundImage} source={{ uri: poster, }} resizeMode=\"cover\" blurRadius={1}> \r\n            <LinearGradient \r\n            colors={['rgba(21,21,21,0.55)', 'rgba(21,21,21,1)']} \r\n            start={{ x: 0.5, y: 0 }}\r\n            end={{ x: 0.5, y: 0.5 }}\r\n            style={styl.background}>\r\n                <SafeAreaView style={styl.mainContainer}>\r\n                    <Image style={styl.poster} source={{ uri: poster, }}/>\r\n                    <Text style={styl.title}>{title}</Text>\r\n                    <View style={styl.infoInRow}>\r\n                        <Text style={styl.MovieInfo}>{year}</Text>\r\n                        <Entypo name=\"dot-single\" size={18} color=\"white\" />\r\n                        <Text style={styl.MovieInfo}>{theGenra}</Text>\r\n                        <Entypo name=\"dot-single\" size={18} color=\"white\" />\r\n                        <Text style={styl.MovieInfo}>{durationMinutes}</Text>\r\n                    </View>\r\n                    <View style={styl.infoInRow}>\r\n                        <Rating\r\n                            type='custom'\r\n                            imageSize={20}\r\n                            ratingColor={'#F6C700'}\r\n                            tintColor={'rgba(21,21,21,1)'}\r\n                            startingValue={omdb[0].imdbRating/2}\r\n                            readonly={true}\r\n                            isDisabled={true}\r\n                        />\r\n                        <Image style={styl.IMDB} source={{ uri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/IMDB_Logo_2016.svg/2560px-IMDB_Logo_2016.svg.png', }}/>\r\n                    </View>\r\n                    <Text style={[styl.MovieInfo, styl.plot]}>{omdb[0].Plot}</Text>\r\n                    <View style={styl.coverButton}>\r\n                        <TouchableOpacity style={styl.GetTicketButton}>\r\n                            <Text>Get Ticket</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </SafeAreaView>\r\n            </LinearGradient>\r\n        </ImageBackground>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AboutMovie;\r\n\r\n// {/* <Image style={styl.tinyLogo} source={{ uri: poster, }} />\r\n// {/* Title, Movie Info and rating */}\r\n//     <View>\r\n//     {/* The title senter */}\r\n//         <Text>{title}</Text>\r\n//     {/* In line text */}\r\n//         <View>\r\n//             <Text>{year}</Text>\r\n//             <Text>{theGenra}</Text>\r\n//             <Text>{durationMinutes}</Text>\r\n//         </View>\r\n//     {/* Star rating */}\r\n//         <View>\r\n//             <Text>{omdb[0].imdbRating}</Text>\r\n//         </View>\r\n//     </View>\r\n// {/* Plot */}\r\n//     <View>\r\n//         <Text>{omdb[0].Plot}</Text>\r\n//     </View> */}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}